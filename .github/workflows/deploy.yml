name: Deploy React Frontend to Droplet

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🧹 Checkout code
        uses: actions/checkout@v3

      - name: 🧱 Install dependencies and build
        run: |
          yarn install
          yarn build
        env:
          CI: false
          GENERATE_SOURCEMAP: false  # Optional: reduces build size

      - name: 🧪 Verify build output
        run: |
          echo "🗂️ Workspace root:"
          ls -lah
          
          # Check for both common React build folder names
          if [ -d "build" ]; then
            echo "📁 build folder found:"
            ls -lah build/
            echo "📄 build file count: $(find build -type f | wc -l)"
            echo "BUILD_FOLDER=build" >> $GITHUB_ENV
          elif [ -d "dist" ]; then
            echo "📁 dist folder found:"
            ls -lah dist/
            echo "📄 dist file count: $(find dist -type f | wc -l)"
            echo "BUILD_FOLDER=dist" >> $GITHUB_ENV
          else
            echo "❌ No build output folder found!"
            echo "Available folders:"
            ls -lah
            exit 1
          fi
          
          ls -lah package.json

      - name: 📦 Upload to Droplet
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ${{ secrets.DROPLET_SSH_KEY }}
          port: 22
          source: "$build/,package.json"
          target: "/var/www/html/"
          overwrite: true
          debug: false

      - name: 🚀 Deploy and setup
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ${{ secrets.DROPLET_SSH_KEY }}
          port: 22
          script: |
            cd /var/www/html
            echo "📁 Files uploaded:"
            ls -lah

            # Move build contents to web root (handles both build and dist)
            if [ -d "build" ]; then
              echo "📦 Moving React build files to web root..."
              cp -r build/* . 2>/dev/null || echo "No files to move from build"
              rm -rf build
            elif [ -d "dist" ]; then
              echo "📦 Moving React dist files to web root..."
              cp -r dist/* . 2>/dev/null || echo "No files to move from dist"
              rm -rf dist
            fi

            echo "📄 Final web root contents:"
            ls -lah

            # Set proper permissions
            chown -R www-data:www-data /var/www/html 2>/dev/null || echo "Setting permissions as root"
            chmod -R 755 /var/www/html

            # Restart Nginx
            echo "🔄 Restarting Nginx..."
            systemctl reload nginx || systemctl restart nginx

            echo "✅ React frontend deployment complete!"

      - name: ✅ Done
        run: echo "🚀 React frontend deployed successfully!"